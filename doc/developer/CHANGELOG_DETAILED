/*! \page changelog Changelog (detailed, for developers)

Quite a lot of basic engine stuff was done before this changelog was created.
Some more history can be devised from git sources (although even there, the thing is not complete).

=== === === ===

15.08.2012:
 - began experimental work on moving core functionality to C++ ("QML for modders, C++ for coders")
 - update master branch to an actual working state
 - fix roster context menu positioning
 - use more strict JavaScript comparison methods
 - make further C++ compile-time optimisations (fix includes, add forward declarations, etc.)
 - introduce a config transfer class (DTO) to simplify the code (and also make it more flexible)
 - fix some cases of bad signal propagation, and faulty LOS detection
 - due to strange errors (probably Qt5 bug), make handlers in Units hybrid (JS function + signal)

04.08.2012:
 - refactor the code a bit (nothing fancy, just deletion of some ugly code)
 - make roster menu stay glued to the bottom of the game area

29.07.2012 (cumulative entry):
 - try making CCF work with newest Qt source code (works only in debug currently)
 - updates to most soure files
 - various other fixes

02.06.2012:
 - more old C++ code fixes (into Qt5 compatible code)
 - add modified wheel event support (wheel+shift, wheel+ctrl)

05.05.2012:
 - add run() function to VehicleExplosion
 - change fireball from particles into an animation of an expanding fireball - looks better, IMO
 - fix BottomMenu not being displayed properly with Qt5 (invisible items were blocking other GUI
   movements)
 - add Weather.qml
 - add Shadow.qml
 - add object type as property to relevant items

01.05.2012:
 - merge back into master
 - finish explosion particle system rewrite (it's basic and ugly, but OK for now)
 - add 'verbose' mode to VehicleExhaust
 - fix units not being able to shoot other tanks
 - extend docs a bit
 - update saving to Qt5, add unit's state to save file

29.04.2012:
 - continue porting CCF to Qt5
 - regenerate docs
 - move arrays (containers) from JS scripts into QML, taking advantage of
   the new 'var' property available in Qt5
 - attempt to replace the particle system with new, QtQuick 2.0 one:
    - success for tank exhaust

28.04.2012:
 - make initial Qt5 port (particle system is temporarily turned off)

19.02.2012:
 - first attempt to get campaign functionality into the game
 - add qmlFileList() to CcfGameManager, change scenariosList() and saveGameList()
   to use this new method internally

15.02.2012:
 - add comments to JS files, test JS documentation
 - attempt to comment QML with doxygen - largely failed, it's just too incompatible

13.02.2012:
 - add gun reloading time (there are still some issues to be fixed here)
 - add some comments to JS files
 - add better aimLine obstacle detection (target is now omitted when firing)
 - prevent unit from shooting if target is not visible (there are obstacles
   in it's path)

12.02.2012:
 - add some info on compilation to dev doc's index page
 - add index page for user docs
 - add AboutMenu
 - add getFileContents to CcfGlobal
 - clean some parts of the code

10.02.2012:
 - separate developer and user documentation
 - add documentation for tools
 - change README_DEVELOPER into index
 - mark as v0.0.4

07-09.02.2012:
 - add more comments to project's source code
 - add text docs to generated documentation as pages. README_DEVELOPER is now the index page
   for the docs
 - change some property getters in CcfConfig (doxygen was not generating docs appropriately
   due to name clashes
 - fix ingroup declarations

04.02.2012:
 - add some doxygen-style documentation comments, mostly to converter
 - add comments to scripts in src/tools
 - add modules to doxygen docs
 - update README_DEVELOPER
 - add configuration file for doxygen with HTML, QHP and .QCH generation turned on

31.01.2012:
 - add license information to all source files
 - add LICENSE.txt file to doc/
 - add some comments to C++ headers

30.01.2012:
 - use QObject bindings added as rootContextProperty to get more dispersed, modular
   C++ architecture (for example CcfSaver as a separate object in context)

29.01.2012:
 - removed echo from updateQmlTo2.0
 - fix issues when right-clicking while placing an order
 - optimise timer running when following a unit (it can be turned off when unit is stationary)
 - add "moving" boolean property to Unit.qml
 - change "child" variables in logic into "unit" variables, together with their plural forms
 - change "units" Loader in Scenario.qml into "unitsLoader"

28.01.2012:
 - add some exceptions to converter
 - add info about new exceptions to converter's helpMessage

26.01.2012:
 - add archiveProject tool
 - convert maps to .png (needed due to some Qt issues, hopefully temporary)
 - move sources of tools into scr/tools
 - create tools/ in root, containing only binaries/ symlinks to tools

19.01.2012:
 - fix some last (hopefully) QRC issues
 - add side changing (bound to '[') possibility
 - make info about winning/ losing a scenario be displayed only once
 - make it impossible to select a destroyed unit

13.01.2012:
 - converter now changes main.cpp, too
 - stop converter from modifying includes in c++ headers
 - fix imgResource paths in QML and JS files
 - make converter un-comment resources in src.pro
 - prevent converter from copying .pro.user
 - code that is put out by converter compiles without errors now
 - additional fixes to make code work on Android out of the box

12.01.2012:
 - fix empty path generation ("qrc://") and trailing slashes
 - remove -n and -d flags
 - fix --force and --suffix to work properly
 - update helpMessage.txt
 - fix path generation
 - add --skip flag support
 - add support for all remaining flags
 - add full QRC generation
 - change relative2qrc target to convert2qrc. This is a - probably - temporary hack to fool (fix) git

11.01.2012:
 - added some info to developer readme
 - further enhancements to relative2qrc application

10.01.2012:
 - make converter properly recognise paths

09.01.2012:
 - add updateQmlTo2.0 shell script to tools/
 - update keyboard reference
 - continue work on converter
 - comment out resources from src.pro
 - further changes to file structure

08.01.2012:
 - move back to non-qrc paths (experimental. QRC will be there only in binary releases)
 - move resources to src/
 - add tools directory
 - add some .pro files, change CCF into a QMake subdir project
 - add relative2qrcConverter project

05.01.2012:
 - add experimental recognition of winning/ losing a scenario
   (on all enemies destroyed/ all allies killed)

04.01.2012:
 - prepare multiple players support
 - add "toggle top menu", and "toggle bottom menu" config options - and keyboard shortcuts

03.01.2012:
 - add aimLine "obscured" and "invisible" markers
 - add LOS detection of terrain, props and units

02.01.2012:
 - some code cleaning,
 - add getProps() to PropCluster

01.01.2012:
 - add PropCluster element. It can be used on maps to generate random clusters of objects
   (e.g. a bunch of trees)

22.12.2011:
 - add game loading
 - add loading screen
 - add CcfMain::disableQrc()
 - fix and update game saving
 - get effects to work in loaded save games
 - fix fire animation showing up on unit following

21.12.2011:
 - make PreferencesMenu flickable when window is small
 - add initial game saving support

20.12.2011:
 - add keyboard shortcuts to preferences menu
 - rename CHANGELOG to CHANGELOG_DETAILED
 - add CHANGELOG (for tagged releases only)
 - mark as v0.0.3
 - fix window maximisation
 - fix changing window dimensions from within the game (in preferences)
 - allow dimensions to be changed in preferences even when "Remember dimensions" entry is on

19.12.2011:
 - add PreferencesMenu with some basic options
 - change shortcut handling in CcfConfig to use QKeySequence
 - add maximised to config
 - add remember window dimensions to config
 - various necessary updates to CcfConfig class
 - move UiMode selection to Preferences

18.12.2011:
 - add prototype damage system

16.12.2011:
 - fix units omitting first order in queue
 - add waypoint order markers + ton of fixes to waypointing and order queues
 - add Quit button to ScenarioMenu

15.12.2011:
 - trim Map_tst3 background
 - fix units mixing orders
 - add order queues
 - fix RubberBand not showing up
 - added initial implementation for waypoint creation (needs fixes, but works)
 - (temporary, probably) orders are cancelled ONLY on "Stop" oder. All movement
   and firing actions are queued
 - add example scripting to Scenario_tst2 (2 units are given 3 orders each and perform
   them automatically on startup!)

14.12.2011:
 - add Map_tst3 and Scnario_tst3
 - add ability to stop following a unit on mobile (context menu "Follow" now toggles following)
 - add option to close scenario to OptionsMenu
 - optimise ScenarioMenu to use Loader instead of Scenario element
 - make group numbers always remain vertical
 - (sort of fix - issue is less apparent on Qt 4.8. Recompiled) pausing seems to be stopping animations only visually.
    It looks as if they still run in the background

13.12.2011:
 - add background to Scenario
 - update ScenarioMenu with some better visuals
 - rebuild zooming so that gameArea's dimensions stay the same, even on zoom less than 100%
   (background remains invisible throughout zooming)
 - fix TopMenu "hiding" plus sign on small screens
 - add pinch zooming
 - make "standard" zooming always center on screen center
 - center scenarios list in ScenarioMenu
 - fix roster status not adjusting size when a long status emerges

12.12.2011:
 - add ScenarioMenu
 - modify Scenario to be more dynamic (allow to instantiate empty Scenario)
 - add default hipsometric image (black)
 - add Scenario_tst2

11.12.2011:
 - modify RosterMenu and SoldierMenu to resize appropriately
 - QRC is here to stay - merge QRC branch into development
 - remove all trial engines from project tree

10.12.2011:
 - various style and font changes to fit Android
 - make TopMenu flickable
 - make BottomMenu flickable
 - move terrainInfoText below TopMenu
 - add imgResource (speeds up compilation time significantly)

09.12.2011:
 - move key press handling into ScenarioLogic
 - QRC take 2

08.12.2011:
 - fix key presses not working when BottomMenu is hidden (ContextMenu was stealing focus)
 - add global opacity to Map.qml
 - make SoldierMenu a bit more flexible, when it comes to it's width
 - rearrange files. C++ now resides in src/, core qml in qml/, and user-visible content
   in maps/, scenarios/ and units/
 - remove JS containers, substitute them with built-in QML list and variant properties
 - add proper "soldiers" property to Unit.qml

07.12.2011:
 - made visibility of items in BottomMenu be based on opacity, with a NumberAnimation
 - add move transitions for items in BottomMenu

06.12.2011:
 - ContextMenu is now displayed on double click when no unit is being followed
 - all menus backgrounds' colours are now parametrised
 - add ContextMenu to BottomMenu on mobile mode
 - add terrainInfoMode for mobile mode
 - change TopMenu transition to be anchor-based, not x-based

05.12.2011:
 - parametrized menus, they should look OK on different screen sizes (and densities). Still needs testing,
   but seems to work

03.12.2011:
 - organise files in PWD/gui into neat folders
 - made soldier menu and statu message menu disappear if they are empty
 - add basic terrain info communication
 - add terrainInfo reader to CcfConfig
 - add "cover" property to props
 - make BottomMenu adjust it's size and not obstruct the view. On mobile, the old behaviour is kept
 - add PropRectangle

02.12.2011:
 - rewrote SoldierMenu so that it is based on GridView
 - add Map_tst2, rebuild Map element, begin adding map props (obstacles). First one is HouseBasic_tst
 - add primitive collision detection. It results in the obstacle removing it's top (for example, a house
   roof becomes invisible)

01.12.2011:
 - add CcfConfigSaver
 - add CcfMain (just initial, copy implementation.
   This is likely to be reshaed later)
 - add status message handling
 - change RosterMenu to be GridView-based

30.11.2011:
 - add sliding BottomMenu (pretty crude implementation, but works)
 - add soldier menu
 - add single soldiers within a unit
 - unified infobox viewer
 - made menus automatically unroll on init, if in desktop mode
 - add OptionsMenu - a roll-down from Options in TopMenu,
   where user will be able to choose from: Preferences, Save game,
   Load game, Quit
 - add quit capability
 - changed QMap<QString, QString> into QMap<QString, QPair<QString, bool> >
   in Config classes - this will enable for the future ConfigSaver class
   to be optimised, as it will only update lines that have changed

29.11.2011:
 - add stop to context menu entry
 - make context menu grid based
 - add zoom in and zoom out keyboard binding ('=' and '-' respectively)
 - parametrised SimpleInfoBox
 - add TopMenu (with new ZoomBox, MenuEntry, PopUpArrow elements)
 - add "Follow" to context menu
 - double click on gameArea now stops following

28.11.2011:
 - add SimpleInfoBox to gui - useful for displaying short messages
 - add pause info box
 - add centering view on a unit (when double clicking on roster entry)
 - add unit follow status box
 - add unit following
 - fix order cancelling
 - make OrderMarkers remain visible even when unit is deselected

27.11.2011:
 - context menu now openes on mouse hold in mobile mode
 - double click in roster now opens context menu
 - add config file, it's parser and root context object.
   Adjust QML to use the new config system
 - add default config file as fallback when there are problems in the main
   one
 - add QML scene resizing together with window
 - add zooming to game area
 - context menu is readjusted to show appropriately when game area is zoomed
 - change roster menu into a QML Grid element

26.11.2011:
 - add drag&drop for OrderMarkers
 - add order cancelling
 - add map scrolling
 - add some keyboard shortcuts
 - add active pause

25.11.2011:
 - fix group orders mixing their targets
 - add desktop mode and mobile mode (initial, simple implementation. There are plans to make it much
   more robust)

24.11.2011:
 - move trialengine2d out of trial and into master

20.11.2011:
 - add order markers

19.11.2011:
 - add new type of turret: TurretImage (it is composed of Image elements,
   not Rectangle ones. It has almost the same code, as Turret.
   A common ancestor will probably be created later)
 - add unified path searching (by means of a PWD root property)
 - add group orders (assigning orders to all selected units at once)
 - add unit selection in both game area AND roster

18.11.2011:
 - add initial modularity to tanks. Tanks should be now more easy to modify.
   Creating new tanks should also be easier. This still needs some fixing,
   as turrets are not as shiny, as they could

17.11.2011:
 - add rubber band unit selection, with modifiers

16.11.2011:
 - add unit selection, with support for modifiers

15.11.2011:
 - add smoke implementation
 - fix mixing fire commands by game logic
 - add support for multiple Effect animations playing at the same time
   (using one Timer and multiple Effect.qml objects)

14.11.2011:
 - add moving fast, sneaking movements implementation
 - add generic unit object, move most of the code from test tank
 - add status messages
 - (and all the rest from git, that is everything older than
   commit 35de2ddac6d3118c0bfcd5f86328ca71fe22a1c5)
*/